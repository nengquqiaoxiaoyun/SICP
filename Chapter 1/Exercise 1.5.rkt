#lang racket/base
(define (p) (p))

(define (test x y)
  (if (= x 0)
  0
  y))

(test 0 (p))

; 在使用应用序的解释器里执行 (test 0 (p)) 时，
; 实际参数 0 和 (p) 都会被求值，而对 (p) 的求值将使解释器进入无限循环

;在正则序中, 传入的实际参数只有在有需要时才会被求值,
; 因此,在使用正则序的解释器里运行 (test 0 (p)) 时,
; 0 和 (p) 都不会立即被求值,当解释进行到 if 语句时, 
; 形式参数 x 的实际参数(也即是 0)会被求值(求值结果也是为 0 ),
; 然后和另一个 0 进行对比((= x 0)),因为对比的值为真(#t),
; 所以 if 返回 0 作为值表达式的值,而这个值又作为 test 函数的值被返回。
; 在正则序中，传入的实际参数只有在有需要时才会被求值，
; 因此，在使用正则序的解释器里运行 (test 0 (p)) 时，
; 0 和 (p) 都不会立即被求值，当解释进行到 if 语句时，
; 形式参数 x 的实际参数(也即是 0)会被求值(求值结果也是为 0 )，
; 然后和另一个 0 进行对比((= x 0))，因为对比的值为真(#t),
; 所以 if 返回 0 作为值表达式的值，而这个值又作为 test 函数的值被返回。